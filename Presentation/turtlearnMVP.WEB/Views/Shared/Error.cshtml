@model ErrorViewModel
@{
    ViewData["Title"] = "Error";
}
<meta charset="UTF-8">

<style>


    .container {
        position: relative;
    }

    #svgImage #errorCode {
        content: "31" !important;
    }

</style>

<section class="space-ptb">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-lg-8">
                <div class="img-container">
                    <img src="~/images/turtlearn/errorbg.png" alt="Background Image">

                    <div style="z-index: 3 !important;" class="overlay">
                        @* <img src="~/images/turtlearn/errorcodes3.svg" alt="Background Image"> *@
                        <iframe id="svgImage" src="~/images/turtlearn/errorcodes3.svg" alt="Background Image" style="width: 100%; height: 100%;"></iframe>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<script>
    var True = true;
    var False = false;

    function replaceTurkishChars(str) {
        return str.replace(/ğ/g, '&gbreve;')
            .replace(/ü/g, '&ubreve;')
            .replace(/ş/g, '&sbreve;')
            .replace(/ı/g, '&dotlessi;')
            .replace(/ö/g, '&obreve;')
            .replace(/ç/g, '&ccedil;');
    }
    $(document).ready(function () {
        var iframe = document.getElementById('svgImage');

        var iframeDoc = iframe.contentDocument || iframe.contentWindow.document;
        var errorCodeElement = iframeDoc.getElementById('errorCode');
        var errorDescElement = iframeDoc.getElementById('errorDesc');
        var errorMessageElement = iframeDoc.getElementById('errorMessage');

        if (@Model.ShowErrorCode && @Model.ErrorCode.HasValue) {
            errorCodeElement.textContent = '@Model.ErrorCode';
        } else {
            errorCodeElement.textContent = '';
        }

        if (@Model.ShowErrorDescription) {
            errorDescElement.innerHTML = '';
            errorDescValue = '@Model.ErrorDescription';
            var words = errorDescValue.split(' ');

            for (var i = 0; i < Math.min(5, words.length); i++) {
                var tspan = document.createElementNS("http://www.w3.org/2000/svg", "tspan");
                tspan.setAttribute("x", "150");
                tspan.setAttribute("dy", "1.2em");
                var convertedWord = replaceTurkishChars(words[i]);
                tspan.innerHTML = convertedWord;
                errorDescElement.appendChild(tspan);
            }
        } else {
            errorDescElement.textContent = '';
        }

        if (@Model.ShowErrorMessage) {
            var message = '@Model.ErrorMessage';
            var convertedMessage = replaceTurkishChars(message);

            errorMessageElement.innerHTML = convertedMessage;
        } else {
            errorMessageElement.textContent = '';
        }
    });
</script>
